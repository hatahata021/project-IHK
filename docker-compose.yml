version: '3.8'

services:
  # DynamoDB Local
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: multilingual-community-dynamodb
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    networks:
      - multilingual-community-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: multilingual-community-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - multilingual-community-network
    command: redis-server --appendonly yes

  # バックエンドAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multilingual-community-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - REDIS_URL=redis://redis:6379
      - AWS_REGION=ap-northeast-1
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - dynamodb-local
      - redis
    networks:
      - multilingual-community-network
    command: npm run dev

  # フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: multilingual-community-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - multilingual-community-network
    command: npm run dev

volumes:
  dynamodb-data:
    driver: local
  redis-data:
    driver: local

networks:
  multilingual-community-network:
    driver: bridge