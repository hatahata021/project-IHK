AWSTemplateFormatVersion: '2010-09-09'
Description: 'DynamoDB tables for AWS Engineers Community'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name
  
  ProjectName:
    Type: String
    Default: multilingual-community
    Description: Project name for resource naming

Resources:
  # Users テーブル
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-users'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: username
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: username-index
          KeySchema:
            - AttributeName: username
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Categories テーブル
  CategoriesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-categories'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: sortOrder
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: sort-order-index
          KeySchema:
            - AttributeName: sortOrder
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Posts テーブル
  PostsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-posts'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: categoryId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: category-created-index
          KeySchema:
            - AttributeName: categoryId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: user-created-index
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Replies テーブル
  RepliesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-replies'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: postId
          AttributeType: S
        - AttributeName: id
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: postId
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: post-created-index
          KeySchema:
            - AttributeName: postId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # TranslationCache テーブル
  TranslationCacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-translation-cache'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: contentHash
          AttributeType: S
      KeySchema:
        - AttributeName: contentHash
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Reactions テーブル
  ReactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-reactions'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: targetId
          AttributeType: S
        - AttributeName: userIdReactionType
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: targetId
          KeyType: HASH
        - AttributeName: userIdReactionType
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: user-index
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

Outputs:
  UsersTableName:
    Description: Users table name
    Value: !Ref UsersTable
    Export:
      Name: !Sub '${AWS::StackName}-UsersTable'

  CategoriesTableName:
    Description: Categories table name
    Value: !Ref CategoriesTable
    Export:
      Name: !Sub '${AWS::StackName}-CategoriesTable'

  PostsTableName:
    Description: Posts table name
    Value: !Ref PostsTable
    Export:
      Name: !Sub '${AWS::StackName}-PostsTable'

  RepliesTableName:
    Description: Replies table name
    Value: !Ref RepliesTable
    Export:
      Name: !Sub '${AWS::StackName}-RepliesTable'

  TranslationCacheTableName:
    Description: Translation cache table name
    Value: !Ref TranslationCacheTable
    Export:
      Name: !Sub '${AWS::StackName}-TranslationCacheTable'

  ReactionsTableName:
    Description: Reactions table name
    Value: !Ref ReactionsTable
    Export:
      Name: !Sub '${AWS::StackName}-ReactionsTable'